<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>Gestion des Tableaux</title>
    <style>
        #resultat {
            display: flex;
            flex-wrap: wrap;
        }

        #tableaux-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .tableau-wrapper {
            display: flex;
            align-items: center;
            border: 1px solid #ccc;
            max-width: 420px;
            font-size: 10px;
            padding: 5px;
            margin-bottom: 0;
        }

        .slider-group {
            display: flex;
            flex-direction: row;
            align-items: center;
            gap: 15px;
            flex-wrap: wrap;
        }

        .slider-subgroup {
            display: flex;
            flex-direction: column;
            min-width: 130px;
        }

        .tableau-result {
            flex-shrink: 0;
            padding-left: 8px;
            width: 180px;
            max-width: 180px;
            font-size: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        select {
            font-size: 9px;
            padding: 3px;
            width: 160px;
            max-width: 160px;
            margin: 0 auto;
            display: block;
        }
    </style>
</head>
<body>

<div style="display: flex; gap: 20px; margin-bottom: 15px;">
    <div class="slider-subgroup">
        <label for="nbTableaux">Nombre de tableaux : <span id="val-nbTableaux">1</span></label>
        <input type="range" id="nbTableaux" min="1" max="10" value="1" />
    </div>

    <div class="slider-subgroup">
        <label for="nbTerrains">Nombre de terrains : <span id="val-nbTerrains">1</span></label>
        <input type="range" id="nbTerrains" min="1" max="20" value="1" />
    </div>
</div>

<div id="tableaux-container"></div>
<div id="resultat"></div>
<div id="resumeTournoi" style="margin-top: 20px; font-weight: bold;"></div>


<script>
    const nbTableauxInput = document.getElementById('nbTableaux');
    const nbTableauxValue = document.getElementById('val-nbTableaux');
    const tableauxContainer = document.getElementById('tableaux-container');
    const nbTerrainsInput = document.getElementById('nbTerrains');
    const nbTerrainsValue = document.getElementById('val-nbTerrains');
    const resultatDiv = document.getElementById('resultat');
    const resumeTournoiDiv = document.getElementById('resumeTournoi');

    let tableauData = [];

    nbTerrainsInput.addEventListener('input', () => {
        nbTerrainsValue.textContent = nbTerrainsInput.value;
        calculEtAffiche();
    });

    function updateTableaux() {
        const nbTableaux = parseInt(nbTableauxInput.value);
        nbTableauxValue.textContent = nbTableaux;

        tableauxContainer.innerHTML = '';
        tableauData = [];

        for (let i = 1; i <= nbTableaux; i++) {
            const wrapper = document.createElement('div');
            wrapper.classList.add('tableau-wrapper');

            const sliderGroup = document.createElement('div');
            sliderGroup.classList.add('slider-group');

            const groupeEquipes = document.createElement('div');
            groupeEquipes.classList.add('slider-subgroup');
            groupeEquipes.innerHTML = `
                <strong>Tableau ${i}</strong>
                <label for="equipes-${i}">Équipes : <span id="val-equipes-${i}">4</span></label>
                <input type="range" id="equipes-${i}" min="1" max="64" value="4" />
            `;

            const groupeDuree = document.createElement('div');
            groupeDuree.classList.add('slider-subgroup');
            groupeDuree.innerHTML = `
                <label for="duree-${i}">Durée : <span id="val-duree-${i}">20</span> min</label>
                <input type="range" id="duree-${i}" min="20" max="35" value="20" step="5" />
            `;

            sliderGroup.appendChild(groupeEquipes);
            sliderGroup.appendChild(groupeDuree);
            wrapper.appendChild(sliderGroup);

            const tableauResultDiv = document.createElement('div');
            tableauResultDiv.classList.add('tableau-result');
            tableauResultDiv.id = `tableau-result-${i}`;
            wrapper.appendChild(tableauResultDiv);

            tableauxContainer.appendChild(wrapper);

            tableauData.push({
                tableau: i,
                nb_equipes: 4,
                dureeMatch: 20,
                repartitions: [],
                selection: 0
            });

            const equipesInput = groupeEquipes.querySelector(`#equipes-${i}`);
            const valEquipesSpan = groupeEquipes.querySelector(`#val-equipes-${i}`);
            equipesInput.addEventListener('input', () => {
                valEquipesSpan.textContent = equipesInput.value;
                tableauData[i - 1].nb_equipes = parseInt(equipesInput.value);
                calculEtAffiche();
            });

            const dureeInput = groupeDuree.querySelector(`#duree-${i}`);
            const valDureeSpan = groupeDuree.querySelector(`#val-duree-${i}`);
            dureeInput.addEventListener('input', () => {
                valDureeSpan.textContent = dureeInput.value;
                tableauData[i - 1].dureeMatch = parseInt(dureeInput.value);
                calculEtAffiche();
            });
        }
    }

    function calculTournoi(equipesParTableau, nbTerrains, dureesMatch) {
        const resultat = [];

        equipesParTableau.forEach((nbEquipes, index) => {
            const repartitions = [];
            let cases = [];

            switch (nbEquipes) {
                case 4: cases = [[4]]; break;
                case 5: cases = [[5]]; break;
                case 6: cases = [[6]]; break;
                case 7: cases = [[7]]; break;
                case 8: cases = [[8], [4, 4]]; break;
                case 9: cases = [[9], [5, 4]]; break;
                case 10: cases = [[10], [6, 4], [5, 5]]; break;
                case 11: cases = [[7, 4], [6, 5]]; break;
                case 12: cases = [[12], [8, 4], [6, 6], [4, 4, 4]]; break;
                case 13: cases = [[9, 4], [5, 4, 4]]; break;
                case 14: cases = [[10, 4], [8, 6], [6, 4, 4]]; break;
                case 15: cases = [[11, 4], [7, 4, 4], [5, 5, 5]]; break;
                case 16: cases = [[8, 8], [6, 6, 4], [4, 4, 4, 4]]; break;
                case 17: cases = [[9, 8], [5, 4, 4, 4]]; break;
                case 18: cases = [[10, 8], [6, 6, 6], [4, 4, 5, 5]]; break;
                case 19: cases = [[11, 8], [7, 4, 4, 4]]; break;
                case 20: cases = [[10, 10], [8, 6, 6], [5, 5, 5, 5]]; break;
                default: cases = []; break;
            }

            for (const poules of cases) {
                let nbMatchs = 0;
                poules.forEach(n => {
                    nbMatchs += (n < 2) ? 0 : (n * (n - 1)) / 2;
                });
                const temps = Math.ceil(nbMatchs / nbTerrains) * dureesMatch[index];

                repartitions.push({
                    poules: poules,
                    nb_matchs: nbMatchs,
                    temps: temps
                });
            }

            resultat.push({
                tableau: index + 1,
                nb_equipes: nbEquipes,
                dureeMatch: dureesMatch[index],
                repartitions: repartitions,
                selection: 0
            });
        });

        return resultat;
    }

    function afficherResultatsParTableau(result) {
        result.forEach((tableauData) => {
            const container = document.getElementById(`tableau-result-${tableauData.tableau}`);
            container.innerHTML = '';

            if (tableauData.repartitions.length === 0) {
                container.textContent = 'Aucune proposition disponible';
                return;
            }

            const select = document.createElement('select');
            select.id = `select-repartition-${tableauData.tableau}`;

            tableauData.repartitions.forEach((rep, idx) => {
                const option = document.createElement('option');
                option.value = idx;
                option.textContent = `${rep.poules.join(' + ')} - ${rep.nb_matchs} matchs - ${rep.temps} min`;
                select.appendChild(option);
            });

            select.value = tableauData.selection ?? 0;

            select.addEventListener('change', e => {
                tableauData.selection = parseInt(e.target.value);
                afficherResumeTournoi(result);
            });

            container.appendChild(select);
        });
    }

    function afficherResumeTournoi(result) {
        let tempsTotal = 0;
        result.forEach(tableau => {
            if (tableau.repartitions.length === 0) return;
            const idx = tableau.selection ?? 0;
            const temps = tableau.repartitions[idx]?.temps ?? 0;
            tempsTotal += temps;
        });
        const heures = Math.floor(tempsTotal / 60);
        const minutes = tempsTotal % 60;
        resumeTournoiDiv.textContent = `Temps total du tournoi : ${heures} heure${heures > 1 ? 's' : ''} ${minutes} minute${minutes > 1 ? 's' : ''}`;    }

    function calculEtAffiche() {
        const nbTerrains = parseInt(nbTerrainsInput.value);
        const equipesParTableau = tableauData.map(t => t.nb_equipes);
        const dureesMatch = tableauData.map(t => t.dureeMatch);

        const result = calculTournoi(equipesParTableau, nbTerrains, dureesMatch);

        result.forEach(r => {
            const ancienne = tableauData.find(t => t.tableau === r.tableau);
            if (ancienne && ancienne.selection < r.repartitions.length) {
                r.selection = ancienne.selection;
            }
        });

        tableauData = result;

        afficherResultatsParTableau(result);
        afficherResumeTournoi(result);
    }

    nbTableauxInput.addEventListener('input', () => {
        updateTableaux();
        calculEtAffiche();
    });

    // Initialisation
    updateTableaux();
    calculEtAffiche();
</script>

</body>
</html>
